<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <UserSecretsId>6509c648-f934-4f7e-aa6a-cd6c6fda9f2a</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <FrontendRoot>Scripts\globos-webshop\</FrontendRoot>
    <SpaRoot>Scripts\globos-webshop\</SpaRoot>
    <SpaProxyServerUrl>https://localhost:44352</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
  </PropertyGroup>

  <ItemGroup>
    <Content Remove="Scripts\**" />
    <Compile Remove="Scripts\**" />
    <EmbeddedResource Remove="Scripts\**" />
    <None Remove="Scripts\**" />
    <Compile Remove="Scripts\globos-webshop\.vscode\**" />
    <Compile Remove="Scripts\globos-webshop\node_modules\**" />
    <Content Remove="Scripts\globos-webshop\.vscode\**" />
    <Content Remove="Scripts\globos-webshop\node_modules\**" />
    <EmbeddedResource Remove="Scripts\globos-webshop\.vscode\**" />
    <EmbeddedResource Remove="Scripts\globos-webshop\node_modules\**" />
    <None Remove="Scripts\globos-webshop\.vscode\**" />
    <None Remove="Scripts\globos-webshop\node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Duende.AccessTokenManagement" Version="3.2.0" />
    <PackageReference Include="Duende.AccessTokenManagement.OpenIdConnect" Version="3.2.0" />
    <PackageReference Include="Duende.IdentityModel" Version="7.0.0" />
    <PackageReference Include="Globos.Authorization.Services" Version="1.0.1-alpha5" />
    <PackageReference Include="Globos.Identity.Services" Version="1.0.0-alpha5" />
    <PackageReference Include="Globos.Logger" Version="1.0.14-alpha" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="9.0.2" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" Version="9.0.2" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="9.0.1" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="9.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="9.0.1" />
    <PackageReference Include="Microsoft.Extensions.Caching.SqlServer" Version="9.0.2" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.21.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="wwwroot\" />
  </ItemGroup>

<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)\node_modules') ">
  <!-- Ensure Node.js is installed -->
  <Exec Command="node --version" ContinueOnError="true">
    <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
  </Exec>
  <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
  <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
  <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
</Target>

<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
  <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production" />

  <ItemGroup>
    <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
    <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
      <RelativePath>wwwroot\%(FileName)%(Extension)</RelativePath>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
    </ResolvedFileToPublish>
  </ItemGroup>
</Target>

</Project>
